########################   waf by zj   ###################


#lua_socket_log_errors off;
#lua_package_cpath "/opt/openresty/openstar/lib/?.so;;";


lua_code_cache on; # 关闭lua_cache 缓存 用于调试， 线上需要开启 设置为on
lua_need_request_body on; #开启post

# 需要根据自己服务器的情况进行配置
lua_package_path "/opt/openresty/waf/lib/?.lua;/opt/openresty/lualib/?.lua";

lua_regex_cache_max_entries 1024000;
# 1m 存储约1000+条IP数据

lua_shared_dict token_dict 50m;	   # token 存放
lua_shared_dict count_dict 50m;     # 用于计数数据的保存
lua_shared_dict config_dict 20m;    # 保存config中部分配置
lua_shared_dict host_dict 20m;      # 保存对应host的规则列表
lua_shared_dict ip_dict 50m;       # 用于记录黑、白名单ip
lua_shared_dict limit_ip_dict 50m;   # 用于URL HOST IP 访问计数

more_set_headers 'Server: itigerwaf';

limit_req_zone  $binary_remote_addr zone=allips:50m rate=15r/s;
#limit_conn_zone $binary_remote_addr zone=addr:50m;

init_by_lua_file  /opt/openresty/waf/init.lua;

init_worker_by_lua_file /opt/openresty/waf/i_worker.lua;
#set_by_lua_file /opt/openresty/openstar/set.lua;
#rewrite_by_lua_file /opt/openresty/openstar/rewrite.lua;

access_by_lua_file /opt/openresty/waf/access_all.lua;

#content_by_lua_file /opt/openresty/openstar/content.lua;
#header_filter_by_lua_file /opt/openresty/openstar/header.lua;

body_filter_by_lua_file /opt/openresty/waf/body.lua;

log_by_lua_file /opt/openresty/waf/log.lua;


##  将api管理相关单独到一个 server,以后也要写界面的，早晚的事
##  这样的话 使用时只要引用这个 waf.conf 即可了，管理端就用端口5460
##  2016年6月7日 20:26:43  update
